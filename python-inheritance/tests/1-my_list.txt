>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> type(my_list)
<class '1-my_list.MyList'>

>>> print(my_list)
[]

>>> my_list = MyList([1, 2, 3])
>>> print(my_list)
[1, 2, 3]

>>> my_list = MyList(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'NoneType' object is not iterable

>>> my_list = MyList()
>>> my_list.append(6)
>>> my_list.append(2)
>>> my_list.append(5)
>>> print(my_list)
[6, 2, 5]

>>> my_list[0] = 8
>>> print(my_list)
[8, 2, 5]

>>> my_list.remove(8)
>>> print(my_list)
[2, 5]

>>> my_list = MyList()
>>> print(my_list.print_sorted)
<bound method MyList.print_sorted of []>

>>> my_list.print_sorted(1)
Traceback (most recent call last):
TypeError: print_sorted() takes 1 positional argument but 2 were given

>>> my_list.append(2)
>>> my_list.append(5)
>>> my_list.append(9)
>>> my_list.append(8)
>>> my_list.append(6)
>>> print(my_list)
[2, 5, 9, 8, 6]

>>> my_list.print_sorted()
[2, 5, 6, 8, 9]

>>> print(my_list)
[2, 5, 9, 8, 6]

>>> my_list = MyList()
>>> my_list.append("Salam")
>>> my_list.append("Dostlar")
>>> my_list.append("Necesiz")
>>> my_list.append("Yaxsisiz")
>>> my_list.append("Burdasiz")
>>> print(my_list)
['Salam', 'Dostlar', 'Necesiz', 'Yaxsisiz', 'Burdasiz']
>>> my_list.print_sorted()
['Burdasiz', 'Dostlar', 'Necesiz', 'Salam', 'Yaxsisiz']

>>> print(my_list)
['Salam', 'Dostlar', 'Necesiz', 'Yaxsisiz', 'Burdasiz']

>>> my_list = MyList()
>>> my_list.print_sorted()
[]

>>> my_list = MyList([5, "Salam", "Necesiz", 2])
>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in print_sorted
TypeError: '<' not supported between instances of 'str' and 'int'
