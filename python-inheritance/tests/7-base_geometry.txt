>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> baseG = BaseGeometry()
>>> type(baseG)
<class '7-base_geometry.BaseGeometry'>

>>> baseG.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> baseG.integer_validator()      
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> baseG.integer_validator("age")         
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> baseG.integer_validator("salam", 5)
>>>

>>> baseG.integer_validator("salam", "5")
Traceback (most recent call last):
TypeError: salam must be an integer

>>> baseG.integer_validator("salam", 0)   
Traceback (most recent call last):
ValueError: salam must be greater than 0

>>> baseG.integer_validator("age", (4,))
Traceback (most recent call last):
TypeError: age must be an integer

>>> baseG.integer_validator("age", [3])
Traceback (most recent call last):
TypeError: age must be an integer

>>> baseG.integer_validator("age", True)
Traceback (most recent call last):
TypeError: age must be an integer

>>> baseG.integer_validator("age", {3, 4})
Traceback (most recent call last):
TypeError: age must be an integer

>>> baseG.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be an integer
